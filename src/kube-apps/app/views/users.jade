extends layout

block content
  h1= title
  p Fetch and manage users from MySQL database (accessible only from within the cluster)
  
  .container
    .section
      h2 Users List
      button#refresh-users Refresh Users
      
      #error-message.error(style='display:none')
      #success-message.success(style='display:none')
      
      table#users-table
        thead
          tr
            th ID
            th Name
            th Email
            th Created At
            th Actions
        tbody
    
    .section
      h2 Add New User
      form#add-user-form
        .form-group
          label(for='name') Name:
          input#name(type='text', name='name', required)
        .form-group
          label(for='email') Email:
          input#email(type='email', name='email', required)
        button(type='submit') Add User
  
  script.
    const errorDiv = document.getElementById('error-message');
    const successDiv = document.getElementById('success-message');
    const tbody = document.querySelector('#users-table tbody');
    
    // Load users on page load
    loadUsers();
    
    // Refresh button
    document.getElementById('refresh-users').addEventListener('click', loadUsers);
    
    // Load users from database
    async function loadUsers() {
      errorDiv.style.display = 'none';
      successDiv.style.display = 'none';
      tbody.innerHTML = '<tr><td colspan="5" style="text-align:center">Loading...</td></tr>';
      
      try {
        const response = await fetch('/users/api/list');
        const data = await response.json();
        
        if (data.success) {
          tbody.innerHTML = '';
          
          if (data.users.length === 0) {
            tbody.innerHTML = '<tr><td colspan="5" style="text-align:center">No users found</td></tr>';
          } else {
            data.users.forEach(user => {
              const row = tbody.insertRow();
              row.insertCell(0).textContent = user.id;
              row.insertCell(1).textContent = user.name;
              row.insertCell(2).textContent = user.email;
              row.insertCell(3).textContent = new Date(user.created_at).toLocaleString();
              
              const actionsCell = row.insertCell(4);
              const deleteBtn = document.createElement('button');
              deleteBtn.textContent = 'Delete';
              deleteBtn.onclick = () => deleteUser(user.id);
              actionsCell.appendChild(deleteBtn);
            });
          }
          
          successDiv.textContent = `Loaded ${data.count} users from database`;
          successDiv.style.display = 'block';
        } else {
          errorDiv.textContent = `Error: ${data.error}`;
          errorDiv.style.display = 'block';
          tbody.innerHTML = '<tr><td colspan="5" style="text-align:center">Failed to load users</td></tr>';
        }
      } catch (error) {
        errorDiv.textContent = `Error: ${error.message}`;
        errorDiv.style.display = 'block';
        tbody.innerHTML = '<tr><td colspan="5" style="text-align:center">Failed to connect to server</td></tr>';
      }
    }
    
    // Add user form
    document.getElementById('add-user-form').addEventListener('submit', async function(e) {
      e.preventDefault();
      errorDiv.style.display = 'none';
      successDiv.style.display = 'none';
      
      const name = document.getElementById('name').value;
      const email = document.getElementById('email').value;
      
      try {
        const response = await fetch('/users/api/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name, email })
        });
        
        const data = await response.json();
        
        if (data.success) {
          successDiv.textContent = data.message;
          successDiv.style.display = 'block';
          document.getElementById('add-user-form').reset();
          loadUsers(); // Reload users list
        } else {
          errorDiv.textContent = `Error: ${data.error}`;
          errorDiv.style.display = 'block';
        }
      } catch (error) {
        errorDiv.textContent = `Error: ${error.message}`;
        errorDiv.style.display = 'block';
      }
    });
    
    // Delete user
    async function deleteUser(userId) {
      if (!confirm('Are you sure you want to delete this user?')) {
        return;
      }
      
      errorDiv.style.display = 'none';
      successDiv.style.display = 'none';
      
      try {
        const response = await fetch(`/users/api/delete/${userId}`, {
          method: 'DELETE'
        });
        
        const data = await response.json();
        
        if (data.success) {
          successDiv.textContent = data.message;
          successDiv.style.display = 'block';
          loadUsers(); // Reload users list
        } else {
          errorDiv.textContent = `Error: ${data.error}`;
          errorDiv.style.display = 'block';
        }
      } catch (error) {
        errorDiv.textContent = `Error: ${error.message}`;
        errorDiv.style.display = 'block';
      }
    }